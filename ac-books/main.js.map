{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.animations.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-list-route/book-list-entry/book-list-entry.component.ts","webpack:///./src/app/book-list-route/book-list-route.component.ts","webpack:///./src/app/book-list-route/book-list/book-list.component.ts","webpack:///./src/app/book-route/book-read-list.component.ts","webpack:///./src/app/book-route/book-route.component.ts","webpack:///./src/app/book.service.ts","webpack:///./src/app/routes.const.ts","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/state/book-read/book-read-reducer.function.ts","webpack:///./src/app/state/book-read/book-read-selector.class.ts","webpack:///./src/app/state/book-read/book-read-state.module.ts","webpack:///./src/app/state/book-read/book-read.actions.ts","webpack:///./src/app/state/book-read/book-read.model.ts","webpack:///./src/app/state/book-read/book-reads-effects.service.ts","webpack:///./src/app/state/books/book-actions.class.ts","webpack:///./src/app/state/books/book-reducer.function.ts","webpack:///./src/app/state/books/book-selector.class.ts","webpack:///./src/app/state/books/book-state.module.ts","webpack:///./src/app/state/categories/categories-actions.class.ts","webpack:///./src/app/state/categories/categories-reducer.function.ts","webpack:///./src/app/state/categories/categories-selector.class.ts","webpack:///./src/app/state/categories/categories-state.module.ts","webpack:///./src/app/state/filter/filte-state.model.ts","webpack:///./src/app/state/filter/filter-reducer.function.ts","webpack:///./src/app/state/filter/filter-selector.class.ts","webpack:///./src/app/state/filter/filter-state.actions.ts","webpack:///./src/app/state/filter/filter-state.module.ts","webpack:///./src/app/state/state-map.model.ts","webpack:///./src/app/state/state-selector.ts","webpack:///./src/app/state/state.module.ts","webpack:///./src/app/state/state.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { trigger, transition, style, query, group, animateChild, animate } from \"@angular/animations\";\n\nexport const slideInAnimation =\n    trigger('routeAnimations', [\n        transition('HomePage => BookPage', [\n            style({ position: 'relative' }),\n            query(':enter, :leave', [\n                style({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%'\n                })\n            ]),\n            query(':enter', [\n                style({ left: '200%' })\n            ]),\n            query(':leave', animateChild()),\n            group([\n                query(':leave', [\n                    animate('300ms ease-out', style({ left: '-100%' }))\n                ]),\n                query(':enter', [\n                    animate('300ms ease-out', style({ left: '00%' }))\n                ])\n            ]),\n            query(':enter', animateChild()),\n        ]),\n        transition('BookPage => HomePage', [\n            style({ position: 'relative' }),\n            query(':enter, :leave', [\n                style({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%'\n                })\n            ]),\n            query(':enter', [\n                style({ left: '-100%' })\n            ]),\n            query(':leave', animateChild()),\n            group([\n                query(':leave', [\n                    animate('300ms ease-out', style({ left: '100%' }))\n                ]),\n                query(':enter', [\n                    animate('300ms ease-out', style({ left: '0%' }))\n                ])\n            ]),\n            query(':enter', animateChild()),\n        ])\n    ]);\n","import {Component, EmbeddedViewRef, HostBinding, HostListener, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {SwUpdate} from '@angular/service-worker';\nimport {MatSnackBar, MatSnackBarRef} from '@angular/material';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {switchMap} from 'rxjs/operators';\nimport { RouterOutlet } from '@angular/router';\nimport { slideInAnimation } from './app.animations';\n\n@Component({\n  selector: 'acb-root',\n  animations: [\n    slideInAnimation\n  ],\n  template: `\n    <ng-template #updateSnackBar>\n      <div style=\"display: flex; flex: 1; flex-direction: row; align-content: space-between; align-self: center\">\n        <div style=\"align-self: center\">An update is available</div>\n        <div style=\"flex: 1\"></div>\n        <div>\n          <button mat-button (click)=\"snackBarRef.dismiss()\">Cancel</button>\n          <button mat-button (click)=\"snackBarRef.dismissWithAction()\">Install</button>\n        </div>\n      </div>\n    </ng-template>\n    <div [@routeAnimations]=\"prepareRoute(outlet)\">\n      <router-outlet #outlet=\"outlet\"></router-outlet>\n    </div>\n  `,\n  styles: [`\n    :host {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n    }\n  `]\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    readonly swUpdate: SwUpdate,\n    readonly snackBar: MatSnackBar,\n    readonly overlay: OverlayContainer\n  ) {\n  }\n\n  @HostBinding('class') cssClass = 'mat-typography';\n\n  @ViewChild('updateSnackBar', {read: TemplateRef})\n  updateSnackBar: TemplateRef<any>;\n\n  snackBarRef: MatSnackBarRef<EmbeddedViewRef<any>>;\n\n  @HostListener('window.beforeinstallprompt', ['$event'])\n  beforeInstallPrompt($event: BeforeInstallPromptEvent) {\n    $event.prompt();\n  }\n\n  ngOnInit(): void {\n    this.overlay.getContainerElement().classList.add('mat-typography');\n    this.swUpdate.available.pipe(switchMap(_ => this.askForUpdate())).subscribe(e => {\n      window.location.reload();\n    });\n  }\n\n  askForUpdate() {\n    this.snackBarRef = this.snackBar.openFromTemplate(this.updateSnackBar, {});\n    return this.snackBarRef.onAction();\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {AppComponent} from './app.component';\nimport {BookListComponent} from './book-list-route/book-list/book-list.component';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {BookListEntryComponent} from './book-list-route/book-list-entry/book-list-entry.component';\nimport {\n  MatButtonModule,\n  MatChipsModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatSelectModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatSnackBarModule\n} from '@angular/material';\nimport {SearchComponent} from './search/search.component';\nimport {BookListRouteComponent} from './book-list-route/book-list-route.component';\nimport {BookRouteComponent} from './book-route/book-route.component';\nimport {routes} from './routes.const';\nimport {BookReadListComponent} from './book-route/book-read-list.component';\nimport {StateModule} from './state/state.module';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookListComponent,\n    BookListEntryComponent,\n    SearchComponent,\n    BookListRouteComponent,\n    BookRouteComponent,\n    BookReadListComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    BrowserModule,\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    StateModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport {BookWithRead} from '../../state/state-map.model';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'acb-book-list-entry',\n  template: `\n    <ng-container *ngFor=\"let book of books\">\n      <mat-list-item [routerLink]=\"['book', book[0].slug]\">\n        <mat-icon mat-list-icon *ngIf=\"book[1].read\">done</mat-icon>\n        <h3 matLine>\n          <span>{{book[0].title}} </span>\n          <span class=\"deemphasized\">{{book[0].year}}</span>\n        </h3>\n        <p matLine>\n          <span *ngIf=\"book[1].dk\" class=\"flag-icon flag-icon-dk\"></span>\n          <span *ngIf=\"book[1].gb\" class=\"flag-icon flag-icon-gb\"></span>\n          <span *ngIf=\"book[1].de\" class=\"flag-icon flag-icon-de\"></span>\n        </p>\n      </mat-list-item>\n    </ng-container>\n  `,\n  styles: [`\n    .deemphasized {\n      color: silver;\n    }\n  `]\n})\nexport class BookListEntryComponent {\n\n  @Input() books: BookWithRead[];\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {MatTabChangeEvent} from '@angular/material';\nimport {StateService} from '../state/state.service';\nimport {isReadingStatus} from '../state/filter/filte-state.model';\nimport {Book} from '../state/books/book.model';\n\n@Component({\n  selector: 'acb-book-list-route',\n  template: `\n    <acb-search\n      (search)=\"state.setTextFilter($event)\"\n      (category)=\"state.setCategoryFilter($event)\"\n    ></acb-search>\n    <acb-book-list\n      [booksByCategory]=\"state.filteredBooksByCategory$ | async\"\n    ></acb-book-list>\n    <div>\n      <mat-tab-group\n        color=\"primary\"\n        mat-stretch-tabs\n        headerPosition=\"below\"\n        [selectedIndex]=\"state.readingState$ | async\"\n        (selectedTabChange)=\"filterChanged($event)\"\n      >\n        <mat-tab label=\"Alle\"></mat-tab>\n        <mat-tab label=\"Besitz\"></mat-tab>\n        <mat-tab label=\"Gelesen\"></mat-tab>\n        <mat-tab label=\"Fehlt\"></mat-tab>\n      </mat-tab-group>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n    }\n\n    acb-book-list {\n      flex: 1;\n      overflow: auto;\n    }\n  `]\n})\nexport class BookListRouteComponent implements OnInit {\n\n  constructor(\n    readonly state: StateService\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  filterChanged({index}: MatTabChangeEvent) {\n    if (isReadingStatus(index)) {\n      this.state.setReadingStatus(index);\n    }\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {BooksByCategory} from '../../state/state-map.model';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'acb-book-list',\n  template: `\n    <mat-list>\n      <ng-container *ngFor=\"let bbc of booksByCategory\">\n        <mat-divider></mat-divider>\n        <h3 mat-subheader>\n          <mat-icon style=\"margin-right: 5px;\">collections_bookmark</mat-icon>\n          <span>{{bbc[0].title}}</span>\n        </h3>\n        <mat-divider></mat-divider>\n        <acb-book-list-entry [books]=\"bbc[1]\"></acb-book-list-entry>\n      </ng-container>\n    </mat-list>\n  `,\n  styles: []\n})\nexport class BookListComponent {\n\n  @Input() booksByCategory: BooksByCategory[];\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {MatSelectionListChange} from '@angular/material';\nimport {BookRead, Languages} from '../state/book-read/book-read.model';\n\n@Component({\n  selector: 'acb-book-read-list',\n  template: `\n    <mat-selection-list #doneList (selectionChange)=\"selectionChanged($event)\">\n      <mat-list-option value=\"gb\" [selected]=\"bookRead.gb\">\n        <span class=\"flag-icon flag-icon-gb\"></span>\n      </mat-list-option>\n      <mat-list-option value=\"dk\" [selected]=\"bookRead.dk\">\n        <span class=\"flag-icon flag-icon-dk\"></span>\n      </mat-list-option>\n      <mat-list-option value=\"de\" [selected]=\"bookRead.de\">\n        <span class=\"flag-icon flag-icon-de\"></span>\n      </mat-list-option>\n      <mat-divider></mat-divider>\n      <mat-list-option value=\"read\" [selected]=\"bookRead.read\">\n        <mat-icon>remove_red_eye</mat-icon>\n      </mat-list-option>\n    </mat-selection-list>\n  `,\n  styles: [`\n    mat-list-option {\n      display: flex;\n      flex-direction: row;\n    }\n    mat-list-option span {\n      display: block;\n    }\n  `]\n})\nexport class BookReadListComponent {\n  @Input() bookRead: BookRead;\n  @Output() changeLanguage = new EventEmitter<[Languages, boolean]>();\n  @Output() changeRead = new EventEmitter<boolean>();\n\n\n  selectionChanged($event: MatSelectionListChange) {\n    const {option} = $event;\n    if (option.value === 'read') {\n      this.changeRead.next(option.selected);\n    } else {\n      this.changeLanguage.next([\n        option.value,\n        option.selected\n      ]);\n    }\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {filter, map, switchMap, tap} from 'rxjs/internal/operators';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Book} from '../state/books/book.model';\nimport {StateService} from '../state/state.service';\nimport {BookRead, Languages} from '../state/book-read/book-read.model';\n\n@Component({\n  selector: 'acb-book-route',\n  template: `\n    <ng-container *ngIf=\"book$ | async as book\">\n      <mat-toolbar color=\"primary\">\n        <mat-toolbar-row>\n          <button mat-icon-button (click)=\"gotBack()\">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n          </button>\n          <span>{{book.title}}</span>\n        </mat-toolbar-row>\n      </mat-toolbar>\n      <article *ngIf=\"read$ | async as read\">\n        <acb-book-read-list\n          (changeLanguage)=\"languageChanged($event, book)\"\n          (changeRead)=\"readChanged($event, book)\"\n          [bookRead]=\"read\"\n        ></acb-book-read-list>\n      </article>\n    </ng-container>\n  `,\n  styles: [``]\n})\nexport class BookRouteComponent implements OnInit {\n  slug$: Observable<string>;\n  book$: Observable<Book>;\n  read$: Observable<BookRead>;\n\n  constructor(\n    readonly route: ActivatedRoute,\n    readonly state: StateService,\n    readonly router: Router\n  ) {\n  }\n\n  async gotBack() {\n    return this.router.navigate(['']);\n  }\n\n  languageChanged([language, read]: [Languages, boolean], book: Book) {\n    this.state.setBookLanguageRead(book, language, read);\n  }\n\n  readChanged(read: boolean, book: Book) {\n    this.state.setBookRead(book, read);\n  }\n\n  ngOnInit(): void {\n    this.slug$ = this.route.paramMap.pipe(\n      map(m => m.get('slug')),\n    );\n\n    const bookWithRead = this.slug$.pipe(\n      switchMap(slug => this.state.getBookRead$(slug)),\n      tap(t => console.log('Test', t)),\n      filter(read => read != null)\n    );\n\n    this.book$ = bookWithRead.pipe(map(([book]) => book));\n    this.read$ = bookWithRead.pipe(map(([_, read]) => read));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map, shareReplay} from 'rxjs/internal/operators';\nimport {Observable} from 'rxjs';\nimport {BookResponse} from './state/books/book.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n\n  private _data$: Observable<BookResponse>;\n  get data$() {\n    if (!this._data$) {\n      this._data$ = this.http.get<BookResponse>('assets/data.json')\n        .pipe(shareReplay());\n    }\n    return this._data$;\n  }\n\n  getBooks() {\n    return this.data$.pipe(map(r => r.books));\n  }\n\n  getCategories() {\n    return this.data$.pipe(map(r => r.cats));\n  }\n\n}\n","import { Routes } from '@angular/router';\nimport { BookListRouteComponent } from './book-list-route/book-list-route.component';\nimport { BookRouteComponent } from './book-route/book-route.component';\n\nexport const routes: Routes = [\n    { path: '', component: BookListRouteComponent,  data: {animation: 'HomePage'}  },\n    { path: 'book/:slug', component: BookRouteComponent,  data: {animation: 'BookPage'}  },\n];\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {map} from 'rxjs/internal/operators';\nimport {MatSelectChange} from '@angular/material';\nimport {StateService} from '../state/state.service';\nimport {Category} from '../state/categories/categories.model';\n\n@Component({\n  selector: 'acb-search',\n  template: `\n    <ng-template #hasValue>\n      <mat-icon matSuffix (click)=\"search.next(''); searchInput.value = ''\">close</mat-icon>\n    </ng-template>\n    <ng-template #hasNoValue>\n      <mat-icon matSuffix>search</mat-icon>\n    </ng-template>\n    <mat-toolbar \n      color=\"primary\" \n      class=\"mat-elevation-z2 mat-body\"\n      style=\"padding-right: 32px\"\n    >\n      <form class=\"search-form mat-body\">\n        <mat-form-field class=\"mat-body\">\n          <input type=\"search\"\n                 class=\"mat-body\"\n                 matInput\n                 placeholder=\"Search\"\n                 #searchInput\n                 (keyup)=\"search.next(searchInput.value)\"\n                 autocomplete=\"off\"\n          />\n          <ng-container *ngIf=\"hasValue$ | async; then hasValue; else hasNoValue\"></ng-container>\n        </mat-form-field>\n      </form>\n    </mat-toolbar>\n    <mat-toolbar class=\"mat-elevation-z2\">\n      <mat-form-field>\n        <mat-select class=\"mat-body\" [(value)]=\"selectedCat\" (selectionChange)=\"catChange($event)\">\n          <mat-option [value]=\"initCat\">\n            Alle\n          </mat-option>\n          <ng-container *ngFor=\"let cat of state.booksByCategories$ | async\">\n            <mat-option class=\"mat-body\" *ngIf=\"cat[1].length\" [value]=\"cat[0]\">\n              <span>{{cat[0].title}}</span>\n              ({{cat[1].length}})\n            </mat-option>\n            <!--<pre>{{cat | json}}</pre>-->\n          </ng-container>\n        </mat-select>\n      </mat-form-field>\n    </mat-toolbar>\n  `,\n  styles: [`\n\n    .search-form {\n      flex: 1;\n      display: flex;\n    }\n\n    mat-form-field {\n      flex: 1\n    }\n  `]\n})\nexport class SearchComponent implements OnInit {\n\n  @Output() search = new EventEmitter<string>();\n  @Output() category = new EventEmitter<Category | null>();\n\n  initCat: any = {};\n  selectedCat: Category = this.initCat;\n  hasValue$ = this.search.pipe(map(v => v.length !== 0));\n\n  constructor(\n    readonly state: StateService,\n  ) {\n  }\n\n  catChange($event: MatSelectChange) {\n    const val = $event.value === this.initCat ? null : $event.value;\n    this.category.next(val);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {bookReadInit, BookReadState} from './book-read.model';\nimport {BookReadActions, SET_LANGUAGE_READ, SET_READ} from './book-read.actions';\n\nexport function bookReadReducer(state: BookReadState = bookReadInit, action: BookReadActions) {\n  switch (action.type) {\n    case SET_LANGUAGE_READ: {\n      console.log(state[action.book.slug], action.language);\n      return ({\n        ...state,\n        [action.book.slug]: {\n          ...state[action.book.slug],\n          [action.language]: action.read,\n        },\n      });\n    }\n    case SET_READ: {\n      return ({\n        ...state,\n        [action.book.slug]: {\n          ...state[action.book.slug],\n          read: action.read,\n        },\n      });\n    }\n  }\n  return state || bookReadInit;\n}\n","import {createFeatureSelector} from '@ngrx/store';\nimport {BookReadState} from './book-read.model';\n\nexport const selectBookRead = createFeatureSelector<BookReadState>('book-read');\n","import {NgModule} from '@angular/core';\nimport {StoreModule} from '@ngrx/store';\nimport {bookReadReducer as bookRead} from './book-read-reducer.function';\nimport {EffectsModule} from '@ngrx/effects';\nimport {BookReadsEffectsService} from './book-reads-effects.service';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature('book-read', bookRead),\n    EffectsModule.forFeature([BookReadsEffectsService])\n  ],\n})\nexport class BookReadStateModule {\n}\n","import {Languages} from './book-read.model';\nimport {Action} from '@ngrx/store';\nimport {Book} from '../books/book.model';\n\nexport const SET_LANGUAGE_READ = '[READ] SET_LANGUAGE';\nexport class SetLanguageRead implements Action {\n  readonly type = SET_LANGUAGE_READ;\n  constructor(\n    readonly book: Book,\n    readonly language: Languages,\n    readonly read: boolean) {}\n}\n\nexport const SET_READ = '[READ] SET';\nexport class SetRead implements Action {\n  readonly type = SET_READ;\n  constructor(\n    readonly book: Book,\n    readonly read: boolean) {}\n}\n\nexport type BookReadActions = SetLanguageRead | SetRead;\n","export interface GotInLanguage {\n    de: boolean;\n    gb: boolean;\n    dk: boolean;\n}\n\nexport type Languages = keyof GotInLanguage;\n\nexport interface BookRead extends GotInLanguage {\n    read: boolean;\n}\n\nexport const createBookRead = (): BookRead => ({\n    de: false,\n    dk: false,\n    gb: false,\n    read: false\n});\n\nexport interface BookReadState {\n    [bookSlug: string]: BookRead;\n}\n\nexport const BOOK_READ_STORAGE_KEY = 'book-read-storage-key';\nexport const bookReadInit: BookReadState = JSON.parse(localStorage.getItem(BOOK_READ_STORAGE_KEY)) || {};\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {SET_LANGUAGE_READ, SET_READ} from './book-read.actions';\nimport {switchMap, tap} from 'rxjs/operators';\nimport {StateService} from '../state.service';\nimport {BOOK_READ_STORAGE_KEY, BookRead, BookReadState} from './book-read.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookReadsEffectsService {\n\n  constructor(\n    readonly actions$: Actions,\n    readonly state: StateService,\n  ) {}\n\n  @Effect({dispatch: false}) changeBookREad$ = this.actions$.pipe(\n    ofType(SET_READ, SET_LANGUAGE_READ),\n    switchMap(_ => this.state.bookRead$),\n    tap((br: BookReadState) => {\n      localStorage.setItem(BOOK_READ_STORAGE_KEY, JSON.stringify(br));\n    })\n  );\n}\n","import { Action } from '@ngrx/store';\nimport {Book} from './book.model';\n\nexport const SET_BOOKS = '[books] LOAD_BOOK_SUCCESS';\nexport class SetBooks  implements Action {\n    readonly type = SET_BOOKS;\n    constructor(readonly books: Book[]) { }\n}\n\nexport type BookAction = SetBooks;\n","import { BookAction, SET_BOOKS } from './book-actions.class';\nimport {Book} from './book.model';\nimport {toStateMap} from '../state-map.model';\n\nexport function bookReducer(state: Book[], action: BookAction) {\n    switch (action.type) {\n        case SET_BOOKS: {\n            return toStateMap(action.books, book => book.slug);\n        }\n    }\n    return state || [];\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport {StateMap, toArray} from '../state-map.model';\nimport {Book} from './book.model';\n\nexport const selectBooks = createFeatureSelector<StateMap<Book>>('books');\nexport const selectAllBooks = createSelector(selectBooks, sm => toArray(sm));\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { bookReducer as book } from './book-reducer.function';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        StoreModule.forFeature('books', book)\n     ],\n    exports: [],\n    providers: [],\n})\nexport class BookStateModule {}\n","import {Action} from '@ngrx/store';\nimport {Category} from './categories.model';\n\nexport const SET_CATEGORIES = '[categories] set';\n\nexport class SetCategories implements Action {\n  readonly type = SET_CATEGORIES;\n\n  constructor(readonly categories: Category[]) {\n  }\n}\n\nexport type BookAction = SetCategories;\n","import { BookAction, SET_CATEGORIES } from './categories-actions.class';\nimport { StateMap, toStateMap } from '../state-map.model';\nimport {Category} from './categories.model';\n\nexport function categoriesReducer(state: StateMap<Category>, action: BookAction): StateMap<Category> {\n    switch (action.type) {\n        case SET_CATEGORIES: {\n            return toStateMap(action.categories, book => book.slug);\n        }\n    }\n    return state || {};\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport {StateMap, toArray} from '../state-map.model';\nimport {Category} from './categories.model';\n\nexport const selectCategories = createFeatureSelector<StateMap<Category>>('categories');\nexport const selectAllCategories = createSelector(selectCategories, toArray);\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { categoriesReducer as categories } from './categories-reducer.function';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        StoreModule.forFeature('categories', categories)\n     ],\n    exports: [],\n    providers: [],\n})\nexport class CategoryStateModule {}\n","export type ReadingStatus = 0 | 1 | 2 | 3;\n\nexport function isReadingStatus(i: number): i is ReadingStatus {\n  return [0, 1, 2, 3].indexOf(i) > -1;\n}\n\nexport interface FilterState {\n    text: string;\n    readingStatus: ReadingStatus;\n    category: string | null;\n}\n\nexport const filterStateInit: FilterState = {\n    text: '',\n    readingStatus: 0,\n    category: null\n};\n","import { FilterState, filterStateInit } from './filte-state.model';\nimport { FilterAction, SET_TEXT_FILTER, SET_CATEGORY_FILTER, SET_READING_STATUS_FILTER } from './filter-state.actions';\n\nexport function filterReducer(state: FilterState = filterStateInit, action: FilterAction): FilterState {\n    switch (action.type) {\n        case SET_TEXT_FILTER: {\n            return ({\n                ...state,\n                text: action.text\n            });\n        }\n        case SET_CATEGORY_FILTER: {\n            return ({\n                ...state,\n                category: ((action.category) || {slug: undefined}).slug\n            });\n        }\n        case SET_READING_STATUS_FILTER: {\n            return ({\n                ...state,\n                readingStatus: action.readingStatus\n            });\n        }\n    }\n    return state || filterStateInit;\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport { FilterState } from './filte-state.model';\n\nexport const selectFilter = createFeatureSelector<FilterState>('filter');\n\nexport const selectReadingState = createSelector(selectFilter, filter => filter.readingStatus);\nexport const selectFilterText = createSelector(selectFilter, filter => filter.text);\nexport const selectFilterCategory = createSelector(selectFilter, filter => filter.category);\n\n","import { Action } from '@ngrx/store';\nimport { ReadingStatus } from './filte-state.model';\nimport {Category} from '../categories/categories.model';\n\nexport const SET_TEXT_FILTER = '[filter] SET_TEXT';\nexport class SetTextFilter implements Action {\n    readonly type = SET_TEXT_FILTER;\n    constructor(public text: string) { }\n}\n\nexport const SET_READING_STATUS_FILTER = '[filter] SET_READING_STATUS';\nexport class SetReadingStatusFilter implements Action {\n    readonly type = SET_READING_STATUS_FILTER;\n    constructor(public readingStatus: ReadingStatus) { }\n}\n\nexport const SET_CATEGORY_FILTER = '[filter] SET_CATEGORY';\nexport class SetCategoryFilter implements Action {\n    readonly type = SET_CATEGORY_FILTER;\n    constructor(public category: Category | null) { }\n}\n\n\nexport type FilterAction = SetTextFilter | SetReadingStatusFilter | SetCategoryFilter;\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { filterReducer as filter } from './filter-reducer.function';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        StoreModule.forFeature('filter', filter)\n     ],\n    exports: [],\n    providers: [],\n})\nexport class FilterStateModule {}","import {Category} from './categories/categories.model';\nimport {Book} from './books/book.model';\nimport {BookRead} from './book-read/book-read.model';\n\nexport interface StateMap<T> {\n    [key: string]: T;\n}\n\nexport function toStateMap<T>(data: T [], idPicker: (e: T) => string): StateMap<T> {\n    return data.reduce((smap, entity) => ({[idPicker(entity)]: entity, ...smap}), {});\n}\n\nexport function toArray<T>(sm: StateMap<T>): T[] {\n  return Object.values(sm);\n}\n\nexport type BookWithRead = [Book, BookRead];\nexport type BooksByCategory = [Category, BookWithRead[]];\n","import { createSelector } from '@ngrx/store';\nimport { selectAllBooks } from './books/book-selector.class';\nimport { selectAllCategories } from './categories/categories-selector.class';\nimport { Category } from './categories/categories.model';\nimport { Book } from './books/book.model';\nimport { FilterState, ReadingStatus } from './filter/filte-state.model';\nimport { selectFilter } from './filter/filter-selector.class';\nimport { BookRead, createBookRead } from './book-read/book-read.model';\nimport { selectBookRead } from './book-read/book-read-selector.class';\nimport { BookWithRead } from './state-map.model';\n\n\nexport const selectBooksWithRead = createSelector(\n  selectAllBooks,\n  selectBookRead,\n  (books: Book[], bookReads) => books.map(book => [\n    book,\n    bookReads[book.slug] || createBookRead()\n  ] as BookWithRead)\n);\n\ntype BookFilterPredicate = (b: BookRead) => boolean;\n\nconst FilterIndexMap: { [name: string]: ReadingStatus } = {\n  ALL: 0,\n  OWN: 1,\n  READ: 2,\n  MISSING: 3\n};\nconst filters: { [key: string]: BookFilterPredicate } = {\n  [FilterIndexMap.ALL]: (_) => true,\n  [FilterIndexMap.OWN]: (book: BookRead) => book.de || book.dk || book.gb,\n  [FilterIndexMap.READ]: (book: BookRead) => book.read,\n  [FilterIndexMap.MISSING]: (book: BookRead) => !(book.de || book.dk || book.gb || book.read)\n};\n\nexport const selectFilteredBooks = createSelector(\n  selectFilter,\n  selectBooksWithRead,\n  ({ category, text, readingStatus }: FilterState, books: BookWithRead[]) => {\n    const filterPredicate = filters[readingStatus];\n    console.log(category);\n    return <BookWithRead[]>books\n      .filter(([_, read]) => filterPredicate(read))\n      .filter(([book]) => text.length === 0 || book.title.toLowerCase().includes(text.toLowerCase()))\n      .filter(([book]) => !category || (category === book.cat));\n  }\n);\n\nconst booksByCategoryProjector = (categories: Category[], bookWithReads: BookWithRead[]) => categories\n  .map(category => [\n    category,\n    bookWithReads\n      .filter(([book]) => book.cat === category.slug)\n      .sort(([b1], [b2]) => b1.year - b2.year)\n  ] as [Category, BookWithRead[]])\n  .filter(([c, b]) => b.length);\n\n\nexport const selectBooksByCategory = createSelector(\n  selectAllCategories,\n  selectBooksWithRead,\n  booksByCategoryProjector\n);\n\nexport const selectFilteredBooksByCategory = createSelector(\n  selectAllCategories,\n  selectFilteredBooks,\n  booksByCategoryProjector\n);\n\nexport const selectBookReadByBook = (book: string) => createSelector(\n  selectBooksWithRead,\n  (bwr: BookWithRead[]) => bwr.find(([b]) => b.slug === book)\n);\n","import {NgModule} from '@angular/core';\nimport {BookStateModule} from './books/book-state.module';\nimport {FilterStateModule} from './filter/filter-state.module';\nimport {CategoryStateModule} from './categories/categories-state.module';\nimport {StoreModule} from '@ngrx/store';\nimport {filterStateInit} from './filter/filte-state.model';\nimport {environment} from 'src/environments/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {BookReadStateModule} from './book-read/book-read-state.module';\nimport {EffectsModule} from '@ngrx/effects';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    BookStateModule,\n    FilterStateModule,\n    CategoryStateModule,\n    BookReadStateModule,\n    StoreModule.forRoot({} as any, {\n      initialState: {\n        filter: filterStateInit,\n        books: {},\n        category: {}\n      }\n    }),\n    EffectsModule.forRoot([]),\n    ...(environment.production\n      ? []\n      : [StoreDevtoolsModule.instrument({})])\n  ],\n  exports: [],\n  providers: [],\n})\nexport class StateModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Action, select, Store} from '@ngrx/store';\nimport {SetCategoryFilter, SetReadingStatusFilter, SetTextFilter} from './filter/filter-state.actions';\nimport {SetCategories} from './categories/categories-actions.class';\nimport {SetBooks} from './books/book-actions.class';\nimport {ReadingStatus} from './filter/filte-state.model';\nimport {selectFilter, selectReadingState} from './filter/filter-selector.class';\nimport {selectAllCategories, selectCategories} from './categories/categories-selector.class';\nimport {BookService} from '../book.service';\nimport {combineLatest} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Category} from './categories/categories.model';\nimport {Book} from './books/book.model';\nimport {selectBookReadByBook, selectBooksByCategory, selectFilteredBooks, selectFilteredBooksByCategory} from './state-selector';\nimport {Languages} from './book-read/book-read.model';\nimport {SetLanguageRead, SetRead} from './book-read/book-read.actions';\nimport {selectBookRead} from './book-read/book-read-selector.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n\n  constructor(\n    readonly store: Store<any>,\n    readonly bookService: BookService\n  ) {\n    combineLatest(\n      this.bookService.getBooks().pipe(map(books => new SetBooks(books))),\n      this.bookService.getCategories().pipe(map(cats => new SetCategories(cats))),\n    ).subscribe((actions: Action[]) => actions.forEach(action => this.store.dispatch(action)));\n  }\n\n  /** Filter */\n\n  setTextFilter(filter: string) {\n    this.store.dispatch(new SetTextFilter(filter));\n  }\n\n  setReadingStatus(rs: ReadingStatus) {\n    this.store.dispatch(new SetReadingStatusFilter(rs));\n  }\n\n  setCategoryFilter(cf: Category | null) {\n    this.store.dispatch(new SetCategoryFilter(cf));\n  }\n\n  setBookLanguageRead(book: Book, language: Languages, read: boolean) {\n    this.store.dispatch(new SetLanguageRead(book, language, read));\n  }\n\n  setBookRead(book: Book, read: boolean) {\n    this.store.dispatch(new SetRead(book, read));\n  }\n\n  /** Cats */\n\n  setCategories(cats: Category[]) {\n    this.store.dispatch(new SetCategories(cats));\n  }\n\n  /** Books */\n\n  setBooks(books: Book[]) {\n    this.store.dispatch(new SetBooks(books));\n  }\n\n  get categories$() {\n    return this.store.pipe(select(selectAllCategories));\n  }\n\n  get booksByCategories$() {\n    return this.store.pipe(select(selectBooksByCategory));\n  }\n\n  get filteredBooksByCategory$() {\n    return this.store.pipe(select(selectFilteredBooksByCategory));\n  }\n\n  get filter$() {\n    return this.store.pipe(select(selectFilter));\n  }\n\n  get readingState$() {\n    return this.store.pipe(select(selectReadingState));\n  }\n\n  get filteredBooks$() {\n    return this.store.pipe(select(selectFilteredBooks));\n  }\n\n  get bookRead$() {\n    return this.store.pipe(select(selectBookRead));\n  }\n\n  getBookRead$(book: string) {\n    return this.store.pipe(select(selectBookReadByBook(book)));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}